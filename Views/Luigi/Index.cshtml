@model IEnumerable<BestellingViewModel>

@{
    ViewData["Title"] = "Luigi";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Bestellingen Overzicht</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">
    <link rel="stylesheet" href="~/css/LuigiIndex.css" >
</head>
<body>
    <div class="container">
        <h1 class="mb-4 text-center">Bestellingen Overzicht</h1>

        <div class="row g-4">
            @foreach (var bestelling in Model)
            {
                <div class="col-md-4">
                    <div class="order-card">
                        <h5>@bestelling.KlantNaam</h5>
                        <h5>@bestelling.Tijd</h5>
                        <p><strong>Status:</strong> @bestelling.Status</p>
                        <ul class="pizza-list">
                            @foreach (var pizza in bestelling.Pizzas)
                            {
                                <li>
                                    <span>@pizza.Name</span>
                                    <input type="checkbox" class="pizza-checkbox" id="pizza-@pizza.Name.Replace(" ", "-")-@bestelling.Id" onclick="markPizzaDone(this)">
                                    <button class="btn btn-primary btn-sm" onclick="startPizzaTimer('@pizza.Name.Replace("'", "\\'")', '@bestelling.Id')">Start Timer</button>
                                    <span id="timer-@pizza.Name.Replace(" ", "-")-@bestelling.Id" class="timer-display" data-running="false">2:30</span>
                                </li>
                            }
                        </ul>
                        <a href="@Url.Action("BestellingFinaliseren", "Luigi", new { id = bestelling.Id })" class="btn btn-secondary btn-custom">Klaar</a>
                    </div>
                </div>
            }
        </div>
    </div>

    <script>
        function startPizzaTimer(pizzaName, bestellingId) { 
            console.log("Pizza name:", pizzaName);
            console.log("Bestelling ID:", bestellingId);
            const timerElement = document.getElementById(`timer-${pizzaName.replace(' ', '-')}-${bestellingId}`);
            let timeLeft = 150; 

            if (timerElement.dataset.running === "true") {
                alert("De timer voor deze pizza loopt al!");
                return;
            }

            timerElement.dataset.running = "true";

            const interval = setInterval(() => {
                const minutes = Math.floor(timeLeft / 60);
                const seconds = timeLeft % 60;

                timerElement.textContent = `${minutes}:${seconds.toString().padStart(2, '0')}`;

                if (timeLeft <= 0) {
                    clearInterval(interval);
                    timerElement.textContent = "Klaar!";
                    alert(`Timer voor pizza ${pizzaName} in bestelling ${bestellingId} is klaar!`);
                    timerElement.dataset.running = "false";
                }

                timeLeft--;
            }, 1000);
        }

        function markPizzaDone(checkbox) {
            if (checkbox.checked) {
                checkbox.parentElement.style.textDecoration = "line-through";
                checkbox.parentElement.style.color = "#6c757d";
            } else {
                checkbox.parentElement.style.textDecoration = "none";
                checkbox.parentElement.style.color = "black";
            }
        }
    </script>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
</body>
</html>
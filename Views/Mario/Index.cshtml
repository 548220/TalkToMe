@model IEnumerable<BestellingOverViewViewModel>

@{
    ViewData["Title"] = "Mario";
}
<link rel="stylesheet" href="/css/MarioBestelling.css">

<h1 class="title">Bestellingen</h1>

<div class="outer-container">
    <div class="notification">
        Je kunt een bestelling finaliseren
    </div>
    <div class="left-container">
        <div class="sidebar">
            <ul>
                @foreach (var bestelling in Model)
                {
                    <li class="bestelling">
                        <a href="#" onclick="details(@bestelling.Id); return false;">
                            @bestelling.KlantNaam
                            @bestelling.Tijd
                            <p>@bestelling.Status</p>
                        </a>
                    </li>
                }
            </ul>
        </div>
        <div class="details" id="detailsPanel">
            <h2>Selecteer een bestelling</h2>
        </div>
    </div>

    <div class="right-container">
        <h1>Tafels</h1>
        <a asp-controller="Mario" asp-action="CreateBestelling" class="btn btn-primary btn-sm">Tafel 1</a>
    </div>
</div>

<div class="fab-container">
    <a asp-controller="Mario" asp-action="CreateBestellingKlant" class="fab btn btn-primary" aria-label="Nieuwe bestelling aanmaken">
        +
    </a>
</div>

<script>

        document.addEventListener("DOMContentLoaded", function () {
        function details(bestelId) {
            fetch(`/Mario/GetBestellingDetails?id=${bestelId}`)
                .then(response => response.json())
                .then(data => {
                    const detailsPanel = document.getElementById("detailsPanel");
                    if (data && data.pizzas) {
                        let pizzasHtml = data.pizzas.map(pizza => `
                            <li>
                                ${pizza.Name} - €${pizza.Price.toFixed(2)}
                            </li>
                        `).join("");

                        detailsPanel.innerHTML = `
                            <h2>Bestelling Details</h2>
                            <ul>${pizzasHtml}</ul>
                            <p><strong>Subtotaal:</strong> €${data.subtotaal.toFixed(2)}</p>
                        `;
                    } else {
                        detailsPanel.innerHTML = "<h2>Geen details gevonden voor deze bestelling.</h2>";
                    }
                })
                .catch(error => {
                    console.error("Fout bij ophalen van details:", error);
                    const detailsPanel = document.getElementById("detailsPanel");
                    detailsPanel.innerHTML = "<h2>Fout bij ophalen van details.</h2>";
                });
        }

        window.details = details; // Zorg dat de functie beschikbaar is in de globale scope
    });

    document.addEventListener("DOMContentLoaded", function () {
        function checkKlaarStatus() {
            fetch('/Mario/CheckKlaarStatus')
                .then(response => response.json())
                .then(data => {
                    if (data.heeftKlaar) {
                        showNotification();
                    } else {
                        hideNotification();
                    }
                })
                .catch(error => console.error('Error bij het ophalen van status:', error));
        }

        function showNotification() {
            let notification = document.getElementById("notification");
            if (!notification) {
                notification = document.createElement("div");
                notification.id = "notification";
                notification.className = "notification";
                notification.innerHTML = "Je kunt een bestelling finaliseren";
                document.body.appendChild(notification);
            }
        }

        function hideNotification() {
            const notification = document.getElementById("notification");
            if (notification) {
                notification.remove();
            }
        }

        setInterval(checkKlaarStatus, 5000);
        });
</script>
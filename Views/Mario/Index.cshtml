@model IEnumerable<BestellingOverViewViewModel>

@{
    ViewData["Title"] = "Mario";
}
<link rel="stylesheet" href="/css/MarioBestelling.css">

<h1 class="title">Bestellingen</h1>
<div class="outer-container">
    <div class="notification">
        Je kunt een bestelling finaliseren
    </div>
    <div class="left-container">
        <div class="sidebar">
            <ul>
                @foreach (var bestelling in Model)
                {
                    <li class="bestelling">
                        <a href="#" onclick="loadDetails(@bestelling.Id); return false;">
                            @bestelling.KlantNaam
                            @bestelling.Tijd
                            <p>@bestelling.Status</p>
                        </a>
                    </li>
                }
            </ul>
        </div>
        <div class="details" id="detailsPanel">
            <h2>Selecteer een bestelling</h2>
        </div>
    </div>

    <div class="right-container">
        <h1>Tafels</h1>
        <a asp-controller="Mario" asp-action="CreateBestelling" class="btn btn-primary btn-sm">Tafel 1</a>
    </div>
</div>

<script>
    function loadDetails(id) {
        const detailsPane = document.getElementById("detailsPanel");
        fetch(`/Mario/_bestellingsDetails/${id}`)
            .then(response => {
                if (!response.ok) {
                    throw new Error("Network response was not ok");
                }
                return response.text();
            })
            .then(html => {
                detailsPane.innerHTML = html;
            })
            .catch(error => {
                detailsPane.innerHTML = `<p>Error loading details: ${error.message}</p>`;
            });
    }

    document.addEventListener("DOMContentLoaded", function () {
        function checkKlaarStatus() {
            fetch('/Mario/CheckKlaarStatus')
                .then(response => response.json())
                .then(data => {
                    if (data.heeftKlaar) {
                        showNotification();
                    } else {
                        hideNotification();
                    }
                })
                .catch(error => console.error('Error bij het ophalen van status:', error));
        }

        function showNotification() {
            let notification = document.getElementById("notification");
            if (!notification) {
                notification = document.createElement("div");
                notification.id = "notification";
                notification.className = "notification";
                notification.innerHTML = "Je kunt een bestelling finaliseren";
                document.body.appendChild(notification);
            }
        }

        function hideNotification() {
            const notification = document.getElementById("notification");
            if (notification) {
                notification.remove();
            }
        }

        setInterval(checkKlaarStatus, 5000);
        });
</script>
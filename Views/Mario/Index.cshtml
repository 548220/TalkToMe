@model IEnumerable<BestellingOverViewViewModel>

@{
    ViewData["Title"] = "Mario";
}
<link rel="stylesheet" href="/css/MarioBestelling.css">

<h1 class="title">Bestellingen</h1>

<div class="outer-container">
    <div class="notification">
        Je kunt een bestelling finaliseren
    </div>
    <div class="left-container">
        <div class="sidebar">
            <ul>
                @foreach (var bestelling in Model)
                {
                    <li class="bestelling">
                        <a href="#" onclick="details(@bestelling.Id); return false;">
                            @bestelling.KlantNaam
                            @bestelling.Tijd
                            <p>@bestelling.Status</p>
                        </a>
                    </li>
                }
            </ul>
        </div>
        <div class="details" id="detailsPanel">
            <h2>Selecteer een bestelling</h2>
        </div>
    </div>

    <div class="right-container">
        <h1>Tafels</h1>
        <a asp-controller="Mario" asp-action="CreateBestelling" class="btn btn-primary btn-sm">Tafel 1</a>
    </div>
</div>

<div class="fab-container">
    <a asp-controller="Mario" asp-action="CreateBestellingKlant" class="fab btn btn-primary" aria-label="Nieuwe bestelling aanmaken">
        +
    </a>
</div>

<script>
    function details(bestellingId) 
    {
         fetch(`/Mario/GetBestellingDetails?bestellingId=${bestellingId}`)
            .then(response => response.json())
            .then(data =>
                {
                    if (data.succes === false)
                    {
                        alert("Fout bij het ophalen van details:" + data.message);
                        return;
                    }

                    const detailsPanel = document.getElementById("detailsPanel");
                    let html = `<h2>Details van bestelling ${bestellingId}</h2>`;
                    html += "<ul>";
                    data.products.forEach(product =>
                    {
                        html += `<li>${product.Name} - €${product.Price.toFixed(2)}</li>`;
                    });
                    html += `</ul><h3>Subtotaal: €${data.subTotal.toFixed(2)}</h3>`;

                    html += 
                    `
                        <button class="btn btn-success" onclick="betaal(${bestellingId})">Betaal</button>
                    <button class="btn btn-danger" onclick="annuleer(${bestellingId})">Annuleer</button>
                    `;

                    detailsPanel.innerHTML = html;
                })
                .catch(error =>
                    {
                        console.error("Fout bij ophalen van details:", error);
                    });
    }
        

    document.addEventListener("DOMContentLoaded", function () {
        function checkKlaarStatus() {
            fetch('/Mario/CheckKlaarStatus')
                .then(response => response.json())
                .then(data => {
                    if (data.heeftKlaar) {
                        showNotification();
                    } else {
                        hideNotification();
                    }
                })
                .catch(error => console.error('Error bij het ophalen van status:', error));
        }

        function showNotification() {
            let notification = document.getElementById("notification");
            if (!notification) {
                notification = document.createElement("div");
                notification.id = "notification";
                notification.className = "notification";
                notification.innerHTML = "Je kunt een bestelling finaliseren";
                document.body.appendChild(notification);
            }
        }

        function hideNotification() {
            const notification = document.getElementById("notification");
            if (notification) {
                notification.remove();
            }
        }

        setInterval(checkKlaarStatus, 5000);
        });
</script>